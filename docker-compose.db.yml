version: '3.8'

services:
  postgresql:
    image: postgres:15-alpine
    container_name: ytempire-postgresql
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ytempire_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_root_pass
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./database/init/01-init-db.sh:/docker-entrypoint-initdb.d/01-init-db.sh:ro
      - ./database/schema:/docker-entrypoint-initdb.d/schema:ro
      - ./backups:/backups
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ytempire_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ytempire-db-network

  redis:
    image: redis:7-alpine
    container_name: ytempire-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./database/redis/init-redis.lua:/docker-entrypoint-initdb.d/init-redis.lua:ro
      - ./database/redis/cache-helpers.lua:/docker-entrypoint-initdb.d/cache-helpers.lua:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ytempire-db-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ytempire-pgadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ytempire.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - ytempire-db-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ytempire-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin123
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - ytempire-db-network

  backup:
    image: postgres:15-alpine
    container_name: ytempire-backup
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgresql
      POSTGRES_DB: ytempire_dev
      POSTGRES_USER: ytempire_user
      POSTGRES_PASSWORD: ytempire_pass
    volumes:
      - ./backups:/backups
      - ./database/scripts/db-backup.sh:/backup.sh:ro
      - redis_data:/data:ro
    command: |
      sh -c 'echo "0 2 * * * /backup.sh" | crontab - && crond -f'
    depends_on:
      - postgresql
      - redis
    networks:
      - ytempire-db-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ytempire-db-network:
    name: ytempire-db-network
    driver: bridge